# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

  schedule:
    - cron: "45 2 */3 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: docker login
        run: make docker-login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: build environments
        run: make prepare-environments
        env:
          BUILDER_DIR: $GITHUB_WORKSPACE

      - name: build v2fly
        run: make build-v2fly
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: build push net
        run: make build-net push-net
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: build push hysteria
        run: make build-hysteria push-hysteria
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

#      - name: build push dnscrypt
#        run: make build-dnscrypt push-dnscrypt
#        env:
#          USR: ${{ secrets.USR }}
#          BUILDER_DIR: $GITHUB_WORKSPACE
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: list images
        run: docker images

      - name: docker logout
        run: docker logout

      - name: build v2fly win
        run: |
          make build-v2fly-win
          mkdir -p $GITHUB_WORKSPACE/output
          docker run -i --rm -v $GITHUB_WORKSPACE/output:/opt v2fly-win cp /app/v2ray.exe /opt/net.exe
          zip -9 $GITHUB_WORKSPACE/output/net.zip $GITHUB_WORKSPACE/output/net.exe
          echo $PWD
          ls -al

        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: release win
        uses: actions/upload-artifact@v4
        with:
          retention-days: 3
          name: net-win
          path: |
            $GITHUB_WORKSPACE/output

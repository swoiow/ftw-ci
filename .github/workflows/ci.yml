name: CI

concurrency:
  group: CI
  cancel-in-progress: true


on:
  push:
    branches: [main]
  schedule:
    - cron: "45 2 */3 * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker login
        run: make docker-login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare environments
        run: make prepare-environments
        env:
          BUILDER_DIR: $GITHUB_WORKSPACE

      - name: Build v2fly
        run: make build-v2fly
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Build net
        run: |
          make build-net push-net
          mkdir -p output
          docker run -i --rm --user $(id -u):$(id -g) -v $PWD/output:/opt ${DOCKER_USERNAME}/net cp /usr/bin/net /opt/net
          zip -9 -j output/net-linux.zip output/net
          chmod -R 777 output
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Build hysteria
        run: make build-hysteria push-hysteria
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Build v2fly win
        run: |
          make build-v2fly-win
          mkdir -p output
          docker run -i --rm --user $(id -u):$(id -g) -v $PWD/output:/opt v2fly-win cp /app/v2ray.exe /opt/net.exe
          zip -9 -j output/net.zip output/net.exe
          chmod -R 777 output
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Build hysteria win
        run: |
          make build-hysteria-win
          mkdir -p output
          docker run -i --rm --user $(id -u):$(id -g) -v $PWD/output:/opt hysteria-win cp /app/hysteria.exe /opt/hysteria.exe
          zip -9 -j output/hysteria.zip output/hysteria.exe
          chmod -R 777 output
        env:
          USR: ${{ secrets.USR }}
          BUILDER_DIR: $GITHUB_WORKSPACE
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          retention-days: 1
          path: |
            output/net.zip
            output/net-linux.zip
            output/hysteria.zip

  release:
    needs:
      - build

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: output

      - name: Show contents
        run: ls -R output

      - name: Generate release info
        run: |
          mkdir -p release-info
          echo "Build Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > release-info/release-info.txt
          echo "" >> release-info/release-info.txt
          echo "Files & MD5:" >> release-info/release-info.txt
          find output -type f | while read file; do
            hash=$(md5sum "$file" | awk '{print $1}')
            echo "$file => $hash" >> release-info/release-info.txt
          done
          cat release-info/release-info.txt

      - name: Release artifacts
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          prerelease: true
          draft: false
          make_latest: false
          tag_name: "binary-${{ github.run_number }}"
          name: "binary-${{ github.run_number }}"
          body_path: release-info/release-info.txt
          files: |
            output/**/net.zip
            output/**/net-linux.zip
            output/**/hysteria.zip
